import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
import db_function as dbf
from vk_search import Vk
import configparser

config = configparser.ConfigParser()  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞
config.read('config.ini')

my_pynder = dbf.PYnder_DB(rebuild=True)

access_token = config["VK_token"]["TOKEN"]
vk_session = vk_api.VkApi(token=access_token)
vk = vk_session.get_api()
longpoll = VkLongPoll(vk_session)


# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ –ø–µ—Ä–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def first_keyboards(id_, text):
    vk.messages.send(
        user_id=id_,
        message=text,
        random_id=0,
        keyboard=open("keyboards/first_button.json", "r", encoding="UTF-8").read(),
    )


# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ –≤—Ç–æ—Ä–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def all_buttons(id_, text, images_list):
    vk.messages.send(
        user_id=id_,
        message=text,
        attachment=images_list,
        random_id=0,
        keyboard=open("keyboards/all_buttons.json", "r", encoding="UTF-8").read(),
    )


def favorite_buttons(id_, text, images_list):
    vk.messages.send(
        user_id=id_,
        message=text,
        attachment=images_list,
        random_id=0,
        keyboard=open("keyboards/favorite_buttons.json", "r", encoding="UTF-8").read(),
    )


def sender(id_, text):
    vk.messages.send(user_id=id_, message=text, random_id=0)


def return_buttons(id_, text):
    vk.messages.send(
        user_id=id_,
        message=text,
        random_id=0,
        keyboard=open("keyboards/all_buttons.json", "r", encoding="UTF-8").read(),
    )

def start_buttons():
    index = 0
    sender(my_id, "–°–µ–∫—É–Ω–¥—É, –∏—â—É –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ç–µ–±—è.\n")
    my_pynder.add_owner(str(my_id))
    my_data = vk_search.get_final_data()
    sender(my_id, f"–ù–∞–π–¥–µ–Ω–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {len(my_data)}.")
    user_text, user_photo = vk_search.search_favorite(
        index, my_data
    )
    return all_buttons(my_id, user_text, user_photo)


# –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
first_run = True
index = 0
mode = 0

for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        try:
            if event.to_me:
                if first_run:
                    first_run = False
                    my_id = event.user_id
                    vk_search = Vk(my_id)
                    my_data = vk_search.get_final_data()
                    print(len(my_data))  #(–°–∞—à–∞) —É–±—Ä–∞—Ç—å –≤ —Ä–µ–ª–∏–∑–µ
                msg = event.text.lower()
                my_msg = event.message

                match msg:
                    case "—Å—Ç–∞—Ä—ÇüöÄ":
                        start_buttons()
                    case "–Ω–∞–∑–∞–¥":
                        if index == 0:
                            sender(my_id, "–≠—Ç–æ —Å–∞–º–∞—è –ø–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å, –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –Ω–µ—Ç.\n")
                        else:
                            index -= 1
                            print(index)
                            user_text, user_photo = vk_search.search_favorite(
                                index, my_data
                            )
                            all_buttons(my_id, user_text, user_photo)
                    case "–¥–∞–ª—å—à–µ":
                        if index == len(my_data) - 1:
                            # –¢–∏–º–∞, –Ω–∞–≤–µ—Ä–Ω–æ–µ –∑–¥–µ—Å—å —Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –µ—Å–ª–∏ –º–æ–∂–Ω–æ –≤—ã—Ç–∞—â–∏—Ç—å –Ω–µ –ø–µ—Ä–≤—ã–µ 10,
                            # –Ω–∞–ø—Ä–∏–º–µ—Ä, –∞ –≤—Ç–æ—Ä—ã–µ 10, –ø–æ—Ç–æ–º —Ç—Ä–µ—Ç—å–∏ –∏ —Ç.–¥. (–°–∞—à–∞)
                            sender(
                                my_id,
                                "–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å, –≤—ã–±–∏—Ä–∞–π –∏–∑ —Ç–æ–≥–æ —á—Ç–æ –µ—Å—Ç—å.\n",
                            )
                        else:
                            index += 1
                            print(index)
                            user_text, user_photo = vk_search.search_favorite(index, my_data)
                            all_buttons(my_id, user_text, user_photo)
                    case "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
                        if my_pynder.add_favorite(my_data[index], str(my_id)):
                            sender(my_id, "–î–æ–±–∞–≤–ª–µ–Ω–æ.\n")
                        else:
                            sender(my_id, "–£–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ.\n")
                    case "—É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ":
                        if mode == 1:
                            delete_result = my_pynder.delete_favorite(my_data[index]["vk_id"], str(my_id))
                        elif mode == 2:
                            if len(favorite_dict) == 0:
                                delete_result = False
                            else:
                                delete_result = my_pynder.delete_favorite(favorite_dict[favorite_index]["vk_id"], str(my_id))

                        if delete_result:
                            sender(my_id, "–£–¥–∞–ª–µ–Ω–æ.\n")
                            favorite_dict = my_pynder.get_favorite(str(my_id))
                            if len(favorite_dict) == 0:
                                sender(my_id, "–í –ò–∑–±—Ä–∞–Ω–Ω–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.\n")
                                all_buttons(my_id, user_text, user_photo)
                            else:
                                if mode == 2:
                                    if favorite_index > len(favorite_dict) - 1:
                                        favorite_index = len(favorite_dict) - 1
                                    f_user_text, f_user_photo = vk_search.search_favorite(
                                        favorite_index, favorite_dict
                                    )
                                    favorite_buttons(my_id, f_user_text, f_user_photo)
                        else:
                            if mode == 1:
                                sender(my_id, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ.\n")
                            elif mode == 2:
                                sender(my_id, "–í –ò–∑–±—Ä–∞–Ω–Ω–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.\n")
                                all_buttons(my_id, user_text, user_photo)
                    case "–ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
                        favorite_dict = my_pynder.get_favorite(str(my_id))
                        if len(favorite_dict) == 0:
                            sender(my_id, "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.\n")
                        else:
                            mode = 2    #–†–µ–∂–∏–º –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                            sender(my_id, "–ó–∞—Ö–æ–∂—É –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ.\n")
                            favorite_index = 0
                            sender(my_id, f"–ó–∞–ø–∏—Å–µ–π –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º: {len(favorite_dict)}.\n")
                            f_user_text, f_user_photo = vk_search.search_favorite(
                                favorite_index, favorite_dict
                            )
                            favorite_buttons(my_id, f_user_text, f_user_photo)
                    case "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–æ–∏—Å–∫":
                        sender(my_id, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞. –¢—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∑–¥–µ—Å—å:\n")
                        mode = 1 #–†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞
                        all_buttons(my_id, user_text, user_photo)
                    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º
                    case "—Å–ª–µ–¥—É—é—â–∏–π":
                        if len(favorite_dict) == 0:
                            sender(my_id, "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.\n")
                        else:
                            # —Å—é–¥–∞ –∫–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –∏–∑–±—Ä–∞–Ω–Ω—ã–º –≤–ø–µ—Ä–µ–¥
                            if favorite_index == len(favorite_dict) - 1:
                                sender(my_id, "–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º.\n")
                            elif favorite_index > len(favorite_dict) - 1:
                                #–≠—Ç–æ –Ω–∞ —Å–ª—É—á–∞–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                                favorite_index = len(favorite_dict) - 1
                                sender(my_id, "–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º.\n")
                            else:
                                favorite_index += 1
                                f_user_text, f_user_photo = vk_search.search_favorite(
                                    favorite_index, favorite_dict
                                )
                                favorite_buttons(my_id, f_user_text, f_user_photo)
                    case "–ø—Ä–µ–¥—ã–¥—É—â–∏–π":
                        if len(favorite_dict) == 0:
                            sender(my_id, "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.\n")
                        else:
                            if favorite_index == 0:
                                sender(my_id, "–≠—Ç–æ –ø–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º.\n")
                            else:
                                favorite_index -= 1
                                f_user_text, f_user_photo = vk_search.search_favorite(
                                    favorite_index, favorite_dict
                                )
                                favorite_buttons(my_id, f_user_text, f_user_photo)
                    case "–∑–∞–∫–æ–Ω—á–∏—Ç—å –ø–æ–∏—Å–∫":
                        first_keyboards(my_id,"–ü–æ–∫–∞(((\n–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —Å–Ω–æ–≤–∞ –∏—Å–∫–∞—Ç—å,\n–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –°—Ç–∞—Ä—Ç.")
                    case _:
                        if len(msg) > 0:
                            mode = 1 #–†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞
                            first_keyboards(
                                my_id,
                                "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤!\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –°—Ç–∞—Ä—Ç.\n"
                            )
        except Exception as ex:
            print(ex)
